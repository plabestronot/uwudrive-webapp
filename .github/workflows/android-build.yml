name: 'publish-android'

on:
  push:
    branches:
      - release

# This workflow will trigger on each push to the `release` branch to create or update a GitHub release, build your Android app, and upload the artifacts to the release.

jobs:
  publish-tauri-android:
    permissions:
      contents: write # Required to create and update GitHub releases and upload artifacts.

    strategy:
      fail-fast: false
      matrix:
        include:
          # Targeting Ubuntu 22.04 for Android builds.
          # The 'target' specifies the Rust build target for Android ARM64.
          - platform: 'ubuntu-22.04'
            target: 'aarch64-linux-android'

    runs-on: ${{ matrix.platform }} # The runner environment for the job.

    steps:
      - uses: actions/checkout@v4 # Checks out your repository code.

      - name: Install pnpm
        uses: pnpm/action-setup@v4 # Installs pnpm.
        with:
          version: 10 # Specifies pnpm version 10.

      - name: setup node
        uses: actions/setup-node@v4 # Sets up Node.js environment.
        with:
          node-version: lts/* # Uses the latest LTS version of Node.js.
          cache: 'pnpm' # Caches pnpm dependencies to speed up subsequent runs.

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable # Installs the stable Rust toolchain.
        with:
          targets: ${{ matrix.target }} # Installs the specific Rust target for Android (aarch64-linux-android).

      - name: install Java
        uses: actions/setup-java@v4 # Sets up Java Development Kit (JDK).
        with:
          distribution: 'temurin' # Specifies the Temurin distribution of OpenJDK.
          java-version: '17' # Installs JDK version 17, matching the 'openjdk-17-jdk' from your setup script.

      - name: install dependencies (ubuntu only)
        # This step installs the necessary system dependencies for Tauri on Ubuntu,
        # including webkit2gtk, gdk-3.0, and other GTK-related libraries,
        # as well as additional dependencies specified by the user.
        # These are required for the Tauri build process even when targeting Android,
        # as the build is performed on a Linux runner.
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libxdo-dev libssl-dev libayatana-appindicator3-dev
        shell: bash # Ensures the command runs in a bash shell.

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3 # Action to set up the Android SDK.
        with:
          api-level: 34 # Installs Android API level 34, as specified in your setup script.
          build-tools: 34.0.0 # Installs Android Build Tools version 34.0.0.
          ndk: 26.1.10909125 # Installs Android NDK version 26.1.10909125.
          # The action automatically handles installing platform-tools and command-line tools.

      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses # Accepts all Android SDK licenses, which is necessary for building.

      - name: Create keystore file
        # This step decodes the base64-encoded keystore secret and saves it to the expected path.
        # The path 'src-tauri/gen/android/app/upload-keystore.jks' is where Gradle expects to find the keystore.
        run: |
          mkdir -p src-tauri/gen/android/app/
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > src-tauri/gen/android/app/upload-keystore.jks
        shell: bash # Ensures the command runs in a bash shell.

      - name: install frontend dependencies
        run: pnpm install # Installs your frontend dependencies.

      - name: Build Tauri Android app
        uses: tauri-apps/tauri-action@v0 # Uses the official Tauri GitHub Action for building.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Required for the action to interact with GitHub (e.g., creating releases).
          # Environment variables for Android signing. These are picked up by Gradle during the build process.
          # Ensure these secrets are correctly configured in your GitHub repository settings.
          ORG_GRADLE_PROJECT_KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          ORG_GRADLE_PROJECT_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          ORG_GRADLE_PROJECT_KEY_PASSWORD: ${{ secrets.KEY_ALIAS_PASSWORD }}
        with:
          tagName: app-v__VERSION__ # The tag name for the GitHub release. '__VERSION__' is automatically replaced by Tauri.
          releaseName: 'App v__VERSION__' # The name of the GitHub release.
          releaseBody: 'See the assets to download this version and install.' # The body text for the GitHub release.
          releaseDraft: true # Creates the release as a draft. Set to 'false' to publish immediately.
          prerelease: false # Set to 'true' if this is a pre-release.
          # Changed 'args' to 'tauri-target' for specifying the Rust target for Android.
          tauri-target: ${{ matrix.target }}
          # Added 'tauri-cli-args' to explicitly run the 'android build --apk' command.
          tauri-cli-args: 'android build --apk'
